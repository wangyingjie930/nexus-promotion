# .github/workflows/docker-image.yml

name: Docker Image CI on Tag

# 1. 触发条件：只在推送 'v' 开头的 tag 时触发 (例如 v1.0.0, v1.2.3)
on:
  push:
    tags:
      - 'v*' # 匹配所有以 'v' 开头的标签

jobs:
  build-and-push:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 虚拟机环境

    steps:
      # 2. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 3. 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. 登录到你的容器镜像仓库 (例如 Docker Hub)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. 为镜像生成元数据 (核心修改点)
      #    这里的配置会确保 Docker 镜像的 tag 和 Git 的 tag 完全一样
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # 替换成你的 Docker Hub 用户名 / 组织名
          images: yingjiewang/nexus-promotion
          tags: |
            # type=ref,event=tag 会自动提取 Git 标签名作为 Docker 标签
            # 例如, 当你推送一个名为 v1.2.3 的 Git 标签时,
            # 这个步骤会生成一个 Docker 标签: v1.2.3
            type=ref,event=tag

      # 6. 构建并推送镜像
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true # 因为只有在打tag时才运行，所以总是推送
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max